tree1 <- tree(Species ~ Sepal.Width + Petal.Width, data = iris)
summary(tree1)
plot(tree1)
text(tree1)
plot(iris$Petal.Width,iris$Sepal.Width,pch=19,col=as.numeric(iris$Species))
partition.tree(tree1,label="Species",add=TRUE)
legend(1.75,4.5,legend=unique(iris$Species),col=unique(as.numeric(iris$Species)),pch=19)
legend(2.25,4.5,legend=unique(iris$Species),col=unique(as.numeric(iris$Species)),pch=19)
legend('topright',legend=unique(iris$Species),col=unique(as.numeric(iris$Species)),pch=19)
legend(2.5,4.5,legend=unique(iris$Species),col=unique(as.numeric(iris$Species)),pch=19)
plot(iris$Petal.Width,iris$Sepal.Width,pch=19,col=as.numeric(iris$Species))
partition.tree(tree1,label="Species",add=TRUE)
legend(2.3,4.5,legend=unique(iris$Species),col=unique(as.numeric(iris$Species)),pch=19)
legend(2.3,4.5,legend=unique(iris$Species),col=unique(as.numeric(iris$Species)),pch=19, bty = 'n')
partition.tree(tree1,label="Species",add=TRUE)
plot(iris$Petal.Width,iris$Sepal.Width,pch=19,col=as.numeric(iris$Species))
partition.tree(tree1,label="Species",add=TRUE)
legend(2.3,4.5,legend=unique(iris$Species),col=unique(as.numeric(iris$Species)),pch=19, bty = 'n')
iris$Species
partition.tree(tree1, label="Species", add=TRUE)
plot(iris$Petal.Width,
iris$Sepal.Width,
pch=19,
col=as.numeric(iris$Species))
partition.tree(tree1, label="Species", add=TRUE)
legend(2.3,4.5,
legend=iris$Species,
col=iris$Species,
pch=19,
bty = 'n')
levels(iris$Species)
plot(iris$Petal.Width,
iris$Sepal.Width,
pch=19,
col=as.numeric(iris$Species))
partition.tree(tree1, label="Species", add=TRUE)
legend(2.3,4.5,
legend=levels(iris$Species),
col=levels(iris$Species),
pch=19,
bty = 'n')
factor(iris$Species)
legend(2.3,4.5,
legend=levels(iris$Species),
col=1:3,
pch=19,
bty = 'n')
length(levels(iris$Species))
plot(iris$Petal.Width,
iris$Sepal.Width,
pch=19,
col=as.numeric(iris$Species))
partition.tree(tree1, label="Species", add=TRUE)
legend(2.3,4.5,
legend=levels(iris$Species),
col=1:length(levels(iris$Species)),
pch=19,
bty = 'n')
rpart.plot(rpart)
rpart <- rpart(Species ~ ., data=iris, method="class")
summary(rpart)
library(tree)
library(rpart.plot)
library(rpart)
rpart <- rpart(Species ~ ., data=iris, method="class")
summary(rpart)
rpart.plot(rpart)
summary(tree1)
plot(tree1); text(tree1)
summary(tree2)
tree2 <- tree(Species ~ Sepal.Width + Sepal.Length + Petal.Length + Petal.Width, data = iris)
summary(tree2)
plot(tree2); text(tree2)
summary(rpart)
rpart.plot(rpart)
?rpart.plot
rpart.plot(rpart, type = 1)
rpart.plot(rpart, type = 2)
rpart.plot(rpart, type = 3)
rpart.plot(rpart, type = 4)
rpart.plot(rpart, type = 4, extra = 1)
rpart.plot(rpart, type = 4, extra = 100)
rpart.plot(rpart, type = 4, extra = 0)
rpart.plot(rpart, type = 4, extra = 101)
plot(tree2); text(tree2)
rpart.plot(rpart, type = 4, extra = 101)
summary(rpart)
summary(tree1)
summary(tree2)
plot(tree2); text(tree2)
tree2 <- tree(Species ~ ., data = iris)
summary(tree2)
plot(tree2); text(tree2)
rpart.plot(rpart, type = 4, extra = 101)
plot(tree2); text(tree2)
plot(tree1); text(tree1)
plot(iris$Petal.Width,
iris$Sepal.Width,
pch=19,
col=as.numeric(iris$Species))
partition.tree(tree1, label="Species", add=TRUE)
legend(2.3,4.5,
legend=levels(iris$Species),
col=1:length(levels(iris$Species)),
pch=19,
bty = 'n')
tree2 <- tree(Species ~ ., data = iris)
summary(tree2)
plot(tree2); text(tree2)
rpart <- rpart(Species ~ ., data=iris, method="class")
summary(rpart)
rpart.plot(rpart, type = 4, extra = 101)
?data
data()
data(CheckWeight)
?ChickWeight
library(dplyr)
data <- tbl_df(ChickWeight)
data %>%
summarise(chickens = n_distinct(Chick), diets = n_distinct(Diet), time_points = n_distinct(Time))
aggregate(data$weight, list(diet = data$Diet), mean)
group_by(data, Diet) %>% summarise(mean = mean(weighted))
group_by(data, Diet) %>% summarise(mean = mean(weight))
aggregate(data$weight, list(time=data$Time), mean)
group_by(data, Time) %>% summarise(mean = mean(weight))
head(aggregate(data$weight,
list(time = data$Time, diet = data$Diet),
mean))
group_by(data, Time, Diet) %>% summarise(mean = mean(weight))
group_by(data, Diet, Time) %>% summarise(mean = mean(weight))
aggregate(data$weight, list(diet = data$Diet), mean, sd)
aggregate(weight, data = data list(diet = data$Diet), mean, sd)
aggregate(weight, data = data, list(diet = data$Diet), mean, sd)
head(data)
data <- ChickWeight
data %>%
group_by(Time, Diet) %>%
summarise(mean = mean(weight))
group_by(data, Diet) %>% summarise(mean = mean(weight))
group_by(data, Time) %>% summarise(mean = mean(weight))
group_by(data, Diet, Time) %>% summarise(mean = mean(weight))
aggregate(weight, data = data, list(diet = data$Diet), mean)
?aggregate
aggregate(weight ~ Diet, data = data, mean)
aggregate(data$weight, list(diet = data$Diet), mean)
aggregate(weight ~ Time + Diet, data = data, mean)
head(aggregate(weight ~ Time + Diet, data = data, mean))
aggregate(weight ~ Diet, data = data, FUN = function(x) c(mean(x)))
aggregate(weight ~ Diet, data = data, FUN = function(x) c(mean = mean(x), n = length(x)))
group_by(data, Diet) %>% summarise(mean = mean(weight))
group_by(data, Diet) %>% summarise(mean = mean(weight), n = nrow(weight))
group_by(data, Diet) %>% summarise(mean = mean(weight), n = nrows(weight))
group_by(data, Diet) %>% summarise(mean = mean(weight), n = length(weight))
ChickWeight
head(data)
data %>% filter(Diet != 1) %>% group_by(Diet) %>% summarise(mean = mean(weight))
aggregate(weight ~ Diet, data = subset(data, Diet!=1), mean)
aggregate(weight ~ Diet, data = subset(data, Diet!=1 & Diet!=2), mean)
aggregate(weight ~ Diet, data = subset(data, Diet!=1), mean)
data %>%
filter(Diet != 1) %>%
group_by(Diet) %>%
summarise(mean = mean(weight))
View(iris)
data %>%
filter(Diet != 1) %>%
group_by(Diet) %>%
summarise(mean = mean(weight))
data %>%
filter(Diet != 1) %>%
group_by(Diet) %>%
summarise(mean = mean(weight)) %>%
arrange(mean)
56250/30
?kmeans
install.packages('clValid')
library(clValid)
data(mouse)
km <- kmeans(iris)
km <- kmeans(iris, centers = 3, nstart = 31)
km <- kmeans(iris, centers = 3, nstart = 1)
km <- kmeans(iris[,-'Species'], centers = 3, nstart = 1)
iris[,-3]
iris[,-4]
iris[,-5]
km <- kmeans(iris[,-5], centers = 3, nstart = 1)
head(mouse)
?mouse
express <- mouse[1:25,c("M1","M2","M3","NC1","NC2","NC3")]
rownames(express) <- mouse$ID[1:25]
## hierarchical clustering
Dist <- dist(express,method="euclidean")
clusterObj <- hclust(Dist, method="average")
nc <- 2 ## number of clusters
cluster <- cutree(clusterObj,nc)
dunn(Dist, cluster)
cluster
d  <- dist(iris[,-5])
km <- kmeans(iris[,-5], centers = 3, nstart = 1)
dunn(d, km$cluster)
d
head(d)
names(d)
class(d)
slotNames(d)
d[1,1]
dim(d)
km
d  <- dist(iris[,-5])
dunn(d, km$cluster)
table(iris$Species, km$cluster)
levels(iris$Species)
km$cluster
head(iris)
iris$Species
km$withinss / km$totss
?kmeans
express <- mouse[1:25,c("M1","M2","M3","NC1","NC2","NC3")]
rownames(express) <- mouse$ID[1:25]
## hierarchical clustering
Dist <- dist(express,method="euclidean")
clusterObj <- hclust(Dist, method="average")
nc <- 2 ## number of clusters
cluster <- cutree(clusterObj,nc)
dunn(Dist, cluster)
Dist
dist
Dist
Dist[1:4,1:4]
class(Dist)
as.matrix(Dist)
head(mouse)
express <- mouse[1:25,-8]
rownames(express) <- mouse$ID[1:25]
## hierarchical clustering
Dist <- dist(express,method="euclidean")
express
?dunn
express <- mouse[1:25,-c(1,8)]
rownames(express) <- mouse$ID[1:25]
## hierarchical clustering
Dist <- dist(express,method="euclidean")
clusterObj <- hclust(Dist, method="average")
nc <- 2 ## number of clusters
cluster <- cutree(clusterObj,nc)
dunn(Dist, cluster)
express_hclust <- hclust(express_dist, method="average")
express <- mouse[1:25,-c(1,8)]
rownames(express) <- mouse$ID[1:25]
express_dist <- dist(express,method="euclidean")
express_hclust <- hclust(express_dist, method="average")
nc <- 2
cluster <- cutree(express_hclust,nc)
dunn(Dist, cluster)
plot(express_hclust)
cluster
names(express_hclust)
express_hclust$labels
?cutree
plot(express_hclust)
plot(cluster)
cluster
nc <- 3
cluster <- cutree(express_hclust, nc)
cluster
?cutree
cluster <- cutree(express_hclust, k = 3)
dunn(Dist, cluster)
cluster
plot(express_hclust, col = cluster)
install.packages('dendextend')
library(dendextend)
color_branches(express_hclust, k = 3)
plot(color_branches(express_hclust, k = 3))
cluster
cluster <- cutree(express_hclust, k = 3)
dunn(Dist, cluster)
express <- mouse[1:25, -c(1,8)]
rownames(express) <- mouse$ID[1:25]
express_dist <- dist(express,method="euclidean")
express_hclust <- hclust(express_dist, method="average")
express_cluster <- cutree(express_hclust, k = 3)
dunn(Dist, express_cluster)
[1] 0.2315126
# install.packages('dendextend')
library(dendextend)
plot(color_branches(express_hclust, k = 3))
?rpart
library(rpart)
?rpart
?hclust
?rect.hclust
install.packages('caret')
library(caret)
?nearZeroVar
update.packages()
update.packages(ask = FALSE)
library(caret)
?caret
??caret
install.packages("caret", dependencies = c("Depends", "Suggests"))
install.packages("caret", dependencies = c("Depends", "Suggests"))
install.packages("caret", dependencies = c("Depends", "Suggests"))
q()
library(romim)
my_key <- set_key('mDMzDRqyTUqmr7L2Pc7l-Q')
o <- get_omim(231300, geneMap= TRUE)
get_gene(o)
o <- get_omim(109400, geneMap= TRUE)
get_gene(o)
o <- get_omim(606854, geneMap= TRUE)
get_gene(o)
source("https://bioconductor.org/biocLite.R")
biocLite("mygene")
biocLite("mygene")
biocLite("myvariant")
library(mygene)
gene <- getGene('1017', fields = 'all')
gene
class(gene)
names(gene)
gene$wikipedia
gene$_`_id`
gene$`_id`
getGene("ENSG00000148795")
getGene('1586')
getGene("ENSG00000148795", fields = 'all')
xli <- c('NSD1', 'NFIX', 'MNX1', 'FGFR3', 'FGFR2')
queryMany(xli, scopes="symbol", fields="entrezgene", species="human")
xli <- c('NSD1', 'ARA267', 'STO', 'SOTOS1')
queryMany(xli, scopes="symbol", fields="entrezgene", species="human")
shiny::runApp('project/check_variant/check_variant')
library(VariantAnnotation)
?readVcf
getwd()
download.file('http://davetang.org/eg/Pfeiffer.vcf')
download.file(url = 'http://davetang.org/eg/Pfeiffer.vcf', destfile = 'Pfeiffer.vcf')
my_vcf <- readVcf('Pfeiffer.vcf', genome = 'hg19')
my_vcf
my_hgvs <- formatHgvs(vcf, variant_type="snp")
library(myvariant)
my_hgvs <- formatHgvs(vcf, variant_type="snp")
my_hgvs <- formatHgvs(my_vcf, variant_type="snp")
length(my_hgvs)
class(my_hgvs)
head(my_hgvs)
my_hgvs[1]
my_test <- getVariant(my_hgvs[1])
my_test
length(my_Test)
length(my_test)
class(my_test)
head(my_test)
names(my_Test)
names(my_test)
length(my_test)
my_test[1]
my_test[[1]]
length(my_test[[1]])
names(my_test[[1]])
my_test[[1]]$cadd
str(my_test)
?rowRanges
unlist(my_test)
names(unlist(my_Test))
names(unlist(my_test))
length(names(unlist(my_test)))
head(unlist(my_test, use.names = FALSE))
length(unlist(my_test, use.names = FALSE))
df <- data.frame()
names(df)
names(df) <- names(unlist(my_test))
df <- data.frame(col.names = names(unlist(my_test)))
df[,1:6]
head(df)
?data.frame
as.data.frame(my_Test)
as.data.frame(my_test)
head(unlist(my_test))
as.data.frame(unlist(my_test))
head(as.data.frame(unlist(my_test)))
b <- names(unlist(my_test))
a <- unlist(my_test, use.names = FALSE)
head(a)
head(b)
rbind(b,a)
class(rbind(b,a))
c <- as.data.frame(rbind(a,b))
c[1:6,1:6]
head(c)
type(c)
class(c)
dim(c)
as.data.frame(b)
df <- as.data.frame(b)
dim(df)
df <- t(as.data.frame(b))
df
a <- names(unlist(my_test))
b <- unlist(my_test, use.names = FALSE)
df <- t(as.data.frame(b))
dim(df)
df[,1:6]
names(df) <- b
df[,1:6]
dim(df)
class(df)
df <- as.data.frame(a = b)
df <- data.frame(a = b)
df
dim(df)
df[,1:6]
df <- data.frame(b)
df
df <- as.data.frame(t(df))
head(df)
df
names(df) <- b
df[,1:6]
names(df) <- a
df[,1:6]
df
class(my_hgvs)
my_test <- getVariant(my_hgvs[1:5])
length(my_hgvs)
my_hgvs[2]
my_hgvs[1]
my_hgvs[1:2]
my_test <- getVariants(my_hgvs[1:5])
my_test
class(my_test)
my_test <- getVariants(my_hgvs)
dim(my_test)
my_test[1,]
head(names(my_test))
str(my_test)
class(my_test)
my_test[1:6,1:6]
table(my_test$notfound)
names(my_test)
library(dplyr)
my_test %>% select('snpeff.ann')
my_test2 <- tbl_df(my_test)
my_test2 %>% select('snpeff.ann')
head(my_test$snpeff.ann)
names(my_test)
head(my_test$clinvar.rcv)
head(my_test$clinvar.type)
class(my_test)
library(VariantAnnotation)
library(myvariant)
d <- c(7,9,10,21,15,15,23)
mean(d)
q()
100/7
library(romim)
my_key <- set_key('mDMzDRqyTUqmr7L2Pc7l-Q')
z <- get_omim(251200, geneMap=TRUE)
get_gene(z)
z <- get_omim(304110, geneMap=TRUE)
get_gene(z)
z <- get_omim(219100, geneMap=TRUE); get_gene(z)
z <- get_omim(194070, geneMap=TRUE); get_gene(z)
1/142
1/142*100
q()
7/27
a <- omim %>% filter(DB_Object_ID == 148050) %>% select(HPO)
jaccard_index <- function(x, y){
i <- length(intersect(x, y))
d <- i/length(union(x,y))
return(d)
}
setwd('~/github/human_phenotype_ontology/cluster/')
pa <- read.table('../script/phenotype_annotation.tab.gz', header = FALSE, stringsAsFactors = FALSE, quote='', sep="\t", comment='')
names(pa) <- c('DB', 'DB_Object_ID', 'DB_Name', 'Qualifier', 'HPO', 'DB_Reference', 'Evidence_code', 'Onset_modifier', 'Frequency_modifier', 'With', 'Aspect', 'Synonym', 'Date', 'Assigned_by')
library(dplyr)
omim <- filter(pa, DB == 'OMIM')
# cross-checking the stats
omim %>%
select(DB_Object_ID) %>%
group_by(DB_Object_ID) %>%
summarise(n = n()) %>%
summarise(mean = mean(n))
omim %>% select(DB_Object_ID) %>% group_by(DB_Object_ID) %>% summarise(n = n()) %>% select(n) %>% table()
a <- omim %>% filter(DB_Object_ID == 148050) %>% select(HPO)
b <- omim %>% filter(DB_Object_ID == 305400) %>% select(HPO)
jaccard_index(a$HPO, b$HPO)
# 610253 KLEEFSTRA SYNDROME
# 148050 KBG SYNDROME
# 305400 AARSKOG-SCOTT SYNDROME
c <- omim %>% filter(DB_Object_ID == 610253) %>% select(HPO)
jaccard_index(a$HPO, b$HPO)
jaccard_index(a$HPO, c$HPO)
jaccard_index(b$HPO, c$HPO)
omim %>% select(DB_Object_ID) %>% group_by(DB_Object_ID) %>% summarise(n = n()) %>% select(n) %>% table()
dim(a)
dim(b)
dim(c)
omim %>% select(DB_Object_ID) %>% group_by(DB_Object_ID) %>% summarise(n = n()) %>% select(n > 7, n < 61) %>% table()
omim %>% select(DB_Object_ID) %>% group_by(DB_Object_ID) %>% summarise(n = n()) %>% select(n > 7, n < 61)
omim %>% select(DB_Object_ID) %>% group_by(DB_Object_ID) %>% summarise(n = n()) %>% select(n > 7 & n < 61)
omim %>% select(DB_Object_ID) %>% group_by(DB_Object_ID) %>% summarise(n = n()) %>% select(n > 7 && n < 61)
omim %>% select(DB_Object_ID) %>% group_by(DB_Object_ID) %>% summarise(n = n()) %>% select(n > 7)
omim %>% select(DB_Object_ID) %>% group_by(DB_Object_ID) %>% summarise(n = n()) %>% filter(n > 7, n < 61)
choose(3, 2)
choose(4, 2)
choose(3000, 2)
d <- omim %>% filter(DB_Object_ID == 272440) %>% select(HPO)
combn(x = letters[1:4], 2)
t(combn(x = letters[1:4], 2))
jaccard_index(c$HPO, d$HPO)
